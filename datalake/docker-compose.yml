version: "3.8"
services:
  datalake_mongodb:
    image: mongo:5.0.13
    restart: always
    ports:
      - 37017:27017
    volumes:
      - ./mongoData:/data/db
      - ./DB_initial_data/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_ADMIN_PASSWORD}
      - MONGO_INITDB_DATABASE=admin
      - DATABASE
      - DB_USER
      - DB_PASS
      - DUMP_USER
      - DUMP_USER_PWD
      - AWS_BUCKET_NAME
      - SETUP_CUSTOMER
      - TEAM_ID
    networks:
      - layernext_network
    deploy:
      resources:
        limits:
          cpus: ${DB_CPU_LIMIT}
          memory: ${DB_MEMORY_LIMIT}

  datalake_connection_mongodb:
    image: mongo:5.0.13
    restart: always
    networks:
      - layernext_network
    ports:
      - 38017:27017
    volumes:
      - ./connectionMongoData:/data/db
      - ./Connection_DB_initial_data/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=${CONNECTION_MONGODB_ADMIN_PASSWORD}
      - MONGO_INITDB_DATABASE=admin
      - CONNECTION_DATABASE
      - CONNECTION_DB_USER
      - CONNECTION_DB_PASS
      - CONNECTION_DUMP_USER
      - CONNECTION_DUMP_USER_PWD
    deploy:
      resources:
        limits:
          cpus: ${DB_CPU_LIMIT}
          memory: ${DB_MEMORY_LIMIT}

  datalake_connection_mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - layernext_network
    ports:
      - "3406:3306"
    volumes:
      - ./Connection_DB_initial_data/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
      - ./datalake_connection_mysql_data:/var/lib/mysql
    deploy:
      resources:
        limits:
          cpus: ${DB_CPU_LIMIT}
          memory: ${DB_MEMORY_LIMIT}

  datalake_node_backend:
    image: layernextai/datalake_node_backend:3.11.1
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - datalake_mongodb
    networks:
      - layernext_network
    deploy:
      resources:
        limits:
          cpus: ${NODE_CPU_LIMIT}
          memory: ${NODE_MEMORY_LIMIT}
    volumes:
      - ./datalake-nodejs/logs:/usr/src/app/datalake-nodejs/logs
      - ./datalake-nodejs/storage:/usr/src/app/datalake-nodejs/storage
      - ./datalake-python-processor/logs:/usr/src/app/datalake-python-processor/logs
      - ./datalake-nodejs/config:/usr/src/app/datalake-nodejs/config
      - ${LOCAL_STORAGE_PATH}:/usr/src/app/buckets/${DEFAULT_BUCKET_NAME}
    env_file:
      - ./.env

  datalake_flask_backend:
    image: layernextai/datalake_flask_backend:3.11.0
    restart: always
    ports:
      - "3100:3100"
    volumes:
      - ./datalake-flask/logs:/app/logs
      - ./datalake-nodejs/config:/app/config
      - ${LOCAL_STORAGE_PATH}:/usr/src/app/buckets/${DEFAULT_BUCKET_NAME}
    depends_on:
      - datalake_node_backend
      - datalake_mongodb
    networks:
      - layernext_network
    deploy:
      resources:
        limits:
          cpus: ${FLASK_CPU_LIMIT}
          memory: ${FLASK_MEMORY_LIMIT}
    env_file:
      - ./.env

  datalake_frontend:
    image: layernextai/datalake_frontend:3.11.1
    restart: always
    networks:
      - layernext_network
    ports:
      - "8095:8095"
    environment:
      - TZ:utc
      - LAYERNEXT_SUB_DOMAIN=${DOMAIN_URL}

networks:
  layernext_network:
    external: true
